---
- name: List running VMs on Proxmox nodes
  hosts: localhost
  gather_facts: false
  vars:
    proxmox_nodes:
      - remonster-1
      - remonster-2
      - remonster-3
      - remonster-4
      - remonster-5
    target_nodes: "all"   # Change to single node name, or keep "all" for all nodes

  tasks:
    - name: Normalize node list
      set_fact:
        nodes_to_check: "{{ proxmox_nodes if target_nodes == 'all' else [target_nodes] }}"

    - name: Gather running VMs via qm list
      shell: "qm list | awk 'NR>1 && $3==\"running\" {print $1 \",\" $2 \",\" $3}'"
      delegate_to: "{{ item }}"
      loop: "{{ nodes_to_check }}"
      register: running_vms
      changed_when: false

    - name: Combine all results
      set_fact:
        all_running_vms: >-
          {%- set out = [] -%}
          {%- for r in running_vms.results -%}
            {%- for line in r.stdout_lines -%}
              {%- set parts = line.split(',') -%}
              {%- if parts|length == 3 -%}
                {%- set _ = out.append({'node': r.item, 'vmid': parts[0], 'name': parts[1], 'status': parts[2]}) -%}
              {%- endif -%}
            {%- endfor -%}
          {%- endfor -%}
          {{ out }}

    - name: Print running VMs grouped by node
      debug:
        msg: |
          {% for node, vms in all_running_vms | groupby('node') %}
          Node: {{ node }}
          {% for vm in vms %}
            VMID: {{ vm.vmid }} | Name: {{ vm.name }} | Status: {{ vm.status }}
          {% endfor %}
          {% endfor %}
